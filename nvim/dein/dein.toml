# default snippets
[[plugins]]
repo = 'Shougo/neosnippet-snippets'
depends = ['deoplete.nvim']

# snippets
[[plugins]]
repo = 'Shougo/neosnippet.vim'
hook_add = '''
  " snippets
  let g:neosnippet#snippets_directory='~/.config/nvim/snippets'
  " Plugin key-mappings.
  " Note: It must be "imap" and "smap".  It uses <Plug> mappings.
  imap <C-k>     <Plug>(neosnippet_expand_or_jump)
  smap <C-k>     <Plug>(neosnippet_expand_or_jump)
  xmap <C-k>     <Plug>(neosnippet_expand_target)
  " SuperTab like snippets behavior.
  " Note: It must be "imap" and "smap".  It uses <Plug> mappings.
  "imap <expr><TAB>
  " \ pumvisible() ? "\<C-n>" :
  " \ neosnippet#expandable_or_jumpable() ?
  " \    "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"
  smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
  \ "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"
  inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"
  " For conceal markers.
  if has('conceal')
    set conceallevel=2 concealcursor=niv
  endif
'''

[[plugins]]
repo = 'zchee/deoplete-jedi'
#on_i = 1
on_ft = 'python'

# complete
[[plugins]]
repo = 'Shougo/deoplete.nvim'
on_event = 'InsertCharPre'
hook_add = '''
  let g:deoplete#enable_at_startup = 1
  let g:deoplete#enable_camel_case = 0
  let g:deoplete#enable_ignore_case = 0
  inoremap <expr><tab> pumvisible() ? "\<C-n>" :
  \ neosnippet#expandable_or_jumpable() ?
  \    "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"
'''
# hook_add = '''
#   let g:deoplete#enable_at_startup = 1
#   let g:deoplete#auto_complete_delay = 0
#   let g:deoplete#auto_complete_start_length = 1
#   let g:deoplete#enable_camel_case = 0
#   let g:deoplete#enable_ignore_case = 0
#   let g:deoplete#enable_refresh_always = 0
#   let g:deoplete#file#enable_buffer_path = 1
#   let g:deoplete#enable_smart_case = 1
#   let g:deoplete#max_list = 10000
#   inoremap <expr><tab> pumvisible() ? "\<C-n>" :
#   \ neosnippet#expandable_or_jumpable() ?
#   \    "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"
# '''
on_i = 1

[[plugins]]
repo = 'https://github.com/cespare/vim-toml'

[[plugins]]
repo = 'https://github.com/itchyny/lightline.vim'
hook_add = '''
  let g:lightline = {
      \ 'colorscheme': 'wombat'
      \ }
'''

[[plugins]]
repo = 'https://github.com/tyru/caw.vim'
[[plugins]]

repo = 'https://github.com/luochen1990/rainbow'
hook_add = 'let g:rainbow_active = 1'


[[plugins]]
repo = 'https://github.com/simeji/winresizer'
hook_add = '''
  "window resize
  let g:winresizer_vert_resize = 1
  let g:winresizer_horiz_resize = 1 '''
[[plugins]]
repo = 'cohama/lexima.vim'
on_i = 1
[[plugins]]
repo = 'https://github.com/Shougo/neco-syntax'
[[Plugins]]
repo = 'https://github.com/deoplete-plugins/deoplete-jedi'


#use esc > no ja
[[plugins]]
repo = 'vim-scripts/fcitx.vim'


#previm
[[plugins]]
repo = 'https://github.com/previm/previm.git'

#open-browser
[[Plugins]]
repo = 'https://github.com/tyru/open-browser.vim.git'

#neoinclude
[[plugins]]
repo = 'https://github.com/Shougo/neoinclude.vim.git'

# usitapunikiakun
[[plugins]]
repo = 'https://github.com/Inazuma110/ushitapunikiakun.vim.git'
hook_add = 'let g:ushitapunikiakun#insert_str = " "'

#vim-devicons
[[plugins]]
repo = 'ryanoasis/vim-devicons'

#vim-airline
[[plugins]]
repo = 'https://github.com/vim-airline/vim-airline.git'
hook_add = '''
  let g:airline_theme = "luna"
  let g:airline_powerline_fonts = 1
  '''

#vim-airline-theme
[[plugins]]
repo = 'https://github.com/vim-airline/vim-airline-themes.git'


#html-css
[[plugins]]
repo = 'https://github.com/mattn/emmet-vim.git'
[[plugins]]
repo = 'https://github.com/tpope/vim-surround.git'
[[plugins]]
repo = 'https://github.com/tyru/open-browser.vim.git'
[[plugins]]
repo = 'https://github.com/hail2u/vim-css3-syntax.git'
[[plugins]]
repo = 'https://github.com/pangloss/vim-javascript.git'
[[plugins]]
repo = 'https://github.com/kchmck/vim-coffee-script.git'


#vim-latex
[[plugins]]
repo = 'lervag/vimtex'
on_ft = ['tex']
hook_add = '''
  let g:vimtex_compiler_latexmk = {
   \ 'background': 1,
   \ 'build_dir': '',
   \ 'continuous': 1,
   \ 'options': [
   \    '-pdfdvi',
   \    '-verbose',
   \    '-file-line-error',
   \    '-synctex=1',
   \    '-interaction=nonstopmode',
   \],
   \}

  let g:vimtex_view_general_viewer = 'evince'
  let g:vimtex_view_general_options = '-r @line @pdf @tex'
'''

#vim-quickrun
[[plugins]]
repo = 'https://github.com/thinca/vim-quickrun'
hook_add = '''
let g:quickrun_config = {
\   'tex': {
\       'command': 'latexmk',
\       'exec': ['%c -gg -pdfdvi %s', 'xdg-open %s:r.pdf']
\   },
\}
'''

#indentLine
[[plugins]]
repo = 'https://github.com/Yggdroot/indentLine'
hook_add = '''
  let g:indentLine_color_term =239
  let g:indentLine_color_gui = '#708090'
  let g:indentLine_char = '|'
'''
